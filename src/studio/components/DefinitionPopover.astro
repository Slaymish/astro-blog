---
/**
 * DefinitionPopover
 * Inline term with an expandable popover for definition, etymology, and notes.
 * Defaults to click-to-open (good for mobile). Hover can be enabled via prop.
 */

interface Props {
  term: string;
  subtitle?: string;              // Optional short gloss appearing in the header
  id?: string;
  trigger?: 'click' | 'hover';    // default: click
  placement?: 'auto' | 'side' | 'below'; // default: auto
}

const {
  term,
  subtitle,
  id,
  trigger = 'click',
  placement = 'auto',
} = Astro.props;

const popId = id || `def-${Math.random().toString(36).slice(2, 10)}`;
---

<span class="def-popover-wrapper" data-trigger={trigger} data-placement-prop={placement} id={`${popId}-wrapper`}>
  <button 
    type="button" 
    class="def-trigger" 
    aria-expanded="false"
    aria-controls={`${popId}-panel`}
  >
    <span class="def-term">{term}</span>
  </button>
  
  <span 
    class="def-panel" 
    id={`${popId}-panel`} 
    role="note"
    aria-labelledby={`${popId}-title`}
    hidden
  >
    <strong class="def-title" id={`${popId}-title`}>{term}</strong>
    {subtitle && (<em class="def-subtitle">{subtitle}</em>)}
    <div class="def-content">
      <slot />
    </div>
  </span>

  <!-- Interaction handled by /studio/studio-interactions.js -->
</span>

<style>
  .def-popover-wrapper {
    position: relative;
    display: inline-block;
  }

  .def-trigger {
    background: none;
    border: none;
    color: var(--studio-text-primary);
    font: inherit;
    padding: 0 0.125rem;
    cursor: pointer;
    border-bottom: 1px dotted var(--studio-accent-dim);
    transition: color var(--studio-duration-fast) var(--studio-ease-out),
                border-color var(--studio-duration-fast) var(--studio-ease-out);
  }
  .def-trigger:hover,
  .def-trigger[aria-expanded="true"] {
    color: var(--studio-accent);
    border-bottom-color: var(--studio-accent);
  }

  .def-panel {
    position: absolute;
    display: block;
    min-width: 260px;
    max-width: 360px;
    background: var(--studio-bg-secondary);
    border: 1px solid var(--studio-border);
    border-radius: 6px;
    padding: var(--studio-space-4);
    box-shadow: 0 6px 24px rgba(0,0,0,0.35);
    color: var(--studio-text-secondary);
    z-index: 40;
    opacity: 0;
    transform: translateY(6px);
    transition: opacity var(--studio-duration-normal) var(--studio-ease-out),
                transform var(--studio-duration-normal) var(--studio-ease-out);
    /* Prevent invisible panel from intercepting clicks */
    pointer-events: none;
  }

  .def-panel.is-visible { opacity: 1; transform: translateY(0); pointer-events: auto; }

  /* Placement logic */
  .def-popover-wrapper[data-placement="below"] .def-panel {
    top: calc(100% + 0.5rem);
    left: 0;
  }
  .def-popover-wrapper[data-placement="side"] .def-panel {
    top: -0.25rem;
    left: calc(100% + 1rem);
    transform: translateX(-6px);
  }
  .def-popover-wrapper[data-placement="side"] .def-panel.is-visible {
    transform: translateX(0);
  }

  .def-title {
    font-family: var(--studio-font-sans);
    color: var(--studio-text-primary);
    display: block;
    margin-bottom: var(--studio-space-2);
    letter-spacing: var(--studio-tracking-normal);
  }

  .def-subtitle {
    display: block;
    font-family: var(--studio-font-sans);
    color: var(--studio-text-muted);
    margin-bottom: var(--studio-space-3);
  }

  .def-content {
    font-family: var(--studio-font-serif);
    line-height: var(--studio-leading-relaxed);
  }

  @media (max-width: 1024px) {
    .def-panel {
      max-width: min(92vw, 360px);
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .def-panel { transition: none; }
  }
</style>

---
import Layout from "../../components/Layout.astro";
import { supabase } from "../../utils/database";
import type { PostWithTags } from "../../../supabase/types";

export const prerender = false;

const { tag } = Astro.params;

let posts: PostWithTags[] | null = null;
let tagInfo: { name: string; slug: string } | null = null;
let error: string | null = null;

if (supabase && tag) {
  // First, get the tag info
  const { data: tagData, error: tagError } = await supabase
    .from("tags")
    .select("name, slug")
    .eq("slug", tag)
    .single();

  if (tagError || !tagData) {
    error = "Tag not found";
  } else {
    tagInfo = tagData;
    
    // Get posts with this tag
    const { data: postsData, error: postsError } = await supabase
      .from("posts")
      .select(`
        *,
        post_tags!inner(
          tags!inner(
            id,
            name,
            slug
          )
        )
      `)
      .eq("post_tags.tags.slug", tag)
      .order("created_at", { ascending: false });

    if (postsError) {
      error = postsError.message;
    } else {
      // Transform the data to match PostWithTags type
      posts = postsData?.map((post: any) => ({
        ...post,
        post_tags: post.post_tags.map((pt: any) => ({ tags: pt.tags }))
      })) || null;
    }
  }
}

if (!supabase) {
  error = "Database not connected";
}
---

<Layout title={tagInfo ? `Posts tagged "${tagInfo.name}"` : "Tag not found"}>
  {error ? (
    <div class="text-center py-12">
      <h1 class="text-4xl font-bold mb-4" style="color: var(--color-text-primary);">Tag Not Found</h1>
      <p class="mb-8" style="color: var(--color-text-muted);">{error}</p>
      <a href="/" style="color: var(--color-link);" class="underline">
        Back to Home
      </a>
    </div>
  ) : (
    <>
      <div class="mb-8">
        <h1 class="text-4xl font-bold mb-4" style="color: var(--color-text-primary);">
          Posts tagged "{tagInfo?.name}"
        </h1>
        <a href="/" style="color: var(--color-link);" class="underline">
          ‚Üê Back to all posts
        </a>
      </div>

      {posts && posts.length > 0 ? (
        <div class="space-y-8">
          {posts.map((post) => (
            <article class="pb-8" style="border-bottom: 1px solid var(--color-border-secondary);">
              <h2 class="text-2xl font-bold mb-2">
                <a href={`/posts/${post.slug}`} style="color: var(--color-text-primary);" class="hover:underline">
                  {post.title}
                </a>
              </h2>
              <p class="mb-4" style="color: var(--color-text-muted);">
                {new Date(post.created_at).toLocaleDateString()}
              </p>
              <div class="prose prose-invert max-w-none mb-4" style="color: var(--color-text-secondary);">
                {post.content.substring(0, 200)}...
              </div>
              {post.post_tags && post.post_tags.length > 0 && (
                        <div class="flex flex-wrap gap-2 mb-8">
          {post.post_tags.map((postTag, index) => {
            // Cycle through different tag colors for visual variety
            const colorVariant = index % 3;
            let bgColor = 'var(--color-tag-bg)';
            let textColor = 'var(--color-tag-text)';
            
            if (colorVariant === 1) {
              bgColor = 'var(--color-tag-accent1-bg)';
              textColor = 'var(--color-tag-accent1-text)';
            } else if (colorVariant === 2) {
              bgColor = 'var(--color-tag-accent2-bg)';
              textColor = 'var(--color-tag-accent2-text)';
            }
            
            return (
              <a
                href={`/tags/${postTag.tags.slug}`}
                class="text-sm px-2 py-1 rounded hover:opacity-80 transition-all"
                style={`background-color: ${bgColor}; color: ${textColor};`}
              >
                {postTag.tags.name}
              </a>
            );
          })}
        </div>
              )}
            </article>
          ))}
        </div>
      ) : (
        <div class="text-center py-12">
          <h2 class="text-2xl font-bold mb-4" style="color: var(--color-text-primary);">No posts found</h2>
          <p style="color: var(--color-text-muted);">
            There are no posts tagged with "{tagInfo?.name}" yet.
          </p>
        </div>
      )}
    </>
  )}
</Layout>
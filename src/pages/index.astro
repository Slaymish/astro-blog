---
import { getEntry } from "astro:content";
import Alert from "../components/Alert.astro";
import Guide from "../components/Guide.astro";
import Layout from "../components/Layout.astro";
import { supabase } from "../utils/database";
import type { PostWithTags } from "../../supabase/types";

export const prerender = false;

let posts: PostWithTags[] | null = null;
let postsError;

// Fetch posts data from Supabase if connection is set up
if (supabase) {
  const { data, error } = await supabase
    .from("posts")
    .select(`
      *,
      post_tags(
        tags(
          id,
          name,
          slug
        )
      )
    `)
    .order("created_at", { ascending: false });
  posts = data as PostWithTags[] | null;
  postsError = error;
}

// Get guides
const connectGuide = await getEntry("guides", "guide-connect-supabase");
const fetchDataGuide = await getEntry("guides", "guide-fetch-data");
---

<Layout title="My Blog">
  {
    supabase ? (
      posts ? (
        <>
          <h1 class="mb-8 text-4xl font-bold">
            My Blog Posts
          </h1>
          <div class="space-y-8">
            {posts?.map((post) => (
              <article class="border-b border-gray-200 pb-8">
                <h2 class="text-2xl font-bold mb-2">
                  <a href={`/posts/${post.slug}`} class="hover:text-blue-600">
                    {post.title}
                  </a>
                </h2>
                <p class="text-gray-600 mb-4">
                  {new Date(post.created_at).toLocaleDateString()}
                </p>
                <div class="prose max-w-none mb-4">
                  {post.content.substring(0, 200)}...
                </div>
                {post.post_tags && post.post_tags.length > 0 && (
                  <div class="flex flex-wrap gap-2">
                    {post.post_tags.map((postTag) => (
                      <span class="bg-blue-100 text-blue-800 text-sm px-2 py-1 rounded">
                        {postTag.tags.name}
                      </span>
                    ))}
                  </div>
                )}
              </article>
            ))}
          </div>
        </>
      ) : (
        <>
          {postsError && (
            <Alert
              title={postsError.code}
              text={postsError.message}
              variant="error"
            />
          )}
          {fetchDataGuide && <Guide guide={fetchDataGuide} />}
        </>
      )
    ) : (
      <>
        <Alert title="Finish setting up your new site" text="Before your website is ready, you must complete the steps from the guide below to create, populate, and connect your Supabase database."/>
        {connectGuide && <Guide guide={connectGuide} />}
      </>
    )
  }
</Layout>

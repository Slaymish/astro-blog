---
import Layout from "../components/Layout.astro";
import { supabase } from "../utils/database";
import { getCollection, type CollectionEntry } from 'astro:content';
import type { PostWithTags } from "../../supabase/types";

export const prerender = true; // Enable prerendering for development

// Function to create a clean text preview from markdown
function createPreview(markdown: string, maxLength: number = 200): string {
  // Remove markdown syntax
  const cleanText = markdown
    .replace(/^---[\s\S]*?---/, '') // Remove frontmatter
    .replace(/#{1,6}\s+/g, '') // Remove headings
    .replace(/\*\*(.*?)\*\*/g, '$1') // Remove bold
    .replace(/\*(.*?)\*/g, '$1') // Remove italic
    .replace(/`(.*?)`/g, '$1') // Remove inline code
    .replace(/\[([^\]]+)\]\([^)]+\)/g, '$1') // Convert links to text
    .replace(/!\[([^\]]*)\]\([^)]+\)/g, '$1') // Remove images
    .replace(/>\s*/g, '') // Remove blockquotes
    .replace(/\n+/g, ' ') // Replace line breaks with spaces
    .replace(/\s+/g, ' ') // Normalize whitespace
    .trim();

  return cleanText.length > maxLength 
    ? cleanText.substring(0, maxLength - 3) + '...'
    : cleanText;
}

let posts: PostWithTags[] | null = null;
// let postsError;

// Fetch posts data from Supabase if connection is set up
if (supabase) {
  const { data } = await supabase
    .from("posts")
    .select(`
      *,
      post_tags(
        tags(
          id,
          name,
          slug
        )
      )
    `)
    .order("created_at", { ascending: false });
  posts = data as PostWithTags[] | null;
  // postsError = error;
}

// explicitly type so TS knows slug, data.pubDate, pdfPath, render exist:
const reports = await getCollection('reports') as CollectionEntry<'reports'>[];

const sortedReports = reports
  .filter(r => !r.data.draft)
  .sort((a, b) =>
    new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
  );

const homeDescription = "Welcome to Hamish's blog - exploring technology, AI, mathematics, and technology. Discover insights on programming, machine learning, algorithms, and philosophy.";
---

<Layout 
  title="Hamish's Blog" 
  description={homeDescription}
  canonicalURL={Astro.url.href}
>
  <!-- Hero Section -->
  <section class="mb-16 text-center fade-in px-4">
    <h1 class="text-4xl sm:text-5xl md:text-6xl font-bold mb-4 leading-tight" style="font-family: var(--font-heading); color: var(--color-text-primary);">
      Welcome to my corner of the web
    </h1>
    <p class="text-lg sm:text-xl md:text-2xl mb-6 max-w-3xl mx-auto" style="color: var(--color-text-secondary); line-height: 1.6;">
      Exploring the intersection of <span style="color: var(--color-primary-500); font-weight: 600;">technology</span>, 
      <span style="color: var(--color-accent-500); font-weight: 600;">AI</span>, 
      and <span style="color: var(--color-accent2-500); font-weight: 600;">mathematics</span>
    </p>
    <div class="flex justify-center gap-3 sm:gap-4 flex-wrap">
      <a 
        href="#reports" 
        class="cta-button cta-primary"
        style="background-color: var(--color-primary-500); color: white;"
      >
        View Reports
      </a>
      <a 
        href="#posts" 
        class="cta-button cta-secondary"
        style="border: 2px solid var(--color-primary-500); color: var(--color-primary-500);"
      >
        Read Posts
      </a>
    </div>
  </section>

  {
    supabase ? (
      posts ? (
        <>
          <section id="reports" aria-labelledby="reports-heading" class="mb-16 scroll-mt-24">
            <h1 id="reports-heading" class="mb-8 fade-in text-4xl font-bold" style="font-family: var(--font-heading); color: var(--color-primary-500);">
              Reports
            </h1>
            <div class="space-y-8" role="list">
              {sortedReports.map((report, index) => (
                <article 
                  role="listitem"
                  class={`pb-8 slide-in card-hover`}
                  style={`border-bottom: 1px solid var(--color-border-secondary); animation-delay: ${index * 0.1}s;`}
                  itemscope 
                  itemtype="http://schema.org/ScholarlyArticle"
                >
                  <header>
                    <h2 class="text-2xl font-bold mb-2">
                      <a 
                        href={`/reports/${report.id.replace(/\.(md|mdx)$/, '')}`}
                        style="color: var(--color-text-primary);" 
                        class="hover:underline transition-colors"
                        itemprop="headline"
                      >
                        {report.data.title}
                      </a>
                    </h2>
                  </header>
                  
                  <div class="mb-4" style="color: var(--color-text-muted);">
                    <time 
                      datetime={new Date(report.data.pubDate).toISOString()}
                      itemprop="datePublished"
                    >
                      {new Date(report.data.pubDate).toLocaleDateString("en-US", {
                        year: "numeric",
                        month: "long",
                        day: "numeric"
                      })}
                    </time>
                    <span itemprop="author" itemscope itemtype="http://schema.org/Person" style="display: none;">
                      <span itemprop="name">Hamish Burke</span>
                    </span>
                  </div>
                  
                  {report.data.description && (
                    <div class="prose prose-invert max-w-none mb-4" style="color: var(--color-text-secondary);" itemprop="description">
                      {report.data.description}
                    </div>
                  )}
                </article>
              ))}
            </div>
          </section>

          <section id="posts" aria-labelledby="recent-posts-heading" class="posts-section scroll-mt-24">
            <h2 id="recent-posts-heading" class="mb-8 text-3xl font-bold" style="font-family: var(--font-heading); color: var(--color-primary-500);">
              Recent Posts
            </h2>
            <div class="space-y-8" role="list">
              {posts?.map((post, index) => (
                <article 
                  role="listitem"
                  class={`pb-8 slide-in card-hover`}
                  style={`border-bottom: 1px solid var(--color-border-secondary); animation-delay: ${index * 0.1}s;`}
                  itemscope 
                  itemtype="http://schema.org/BlogPosting"
                >
                  <header>
                    <h2 class="text-2xl font-bold mb-2">
                      <a 
                        href={`/posts/${post.slug}`} 
                        style="color: var(--color-text-primary);" 
                        class="hover:underline transition-colors"
                        itemprop="headline"
                      >
                        {post.title}
                      </a>
                    </h2>
                  </header>
                  
                  <div class="mb-4" style="color: var(--color-text-muted);">
                    <time 
                      datetime={post.created_at}
                      itemprop="datePublished"
                    >
                      {new Date(post.created_at).toLocaleDateString("en-US", {
                        year: "numeric",
                        month: "long",
                        day: "numeric"
                      })}
                    </time>
                    <span itemprop="author" itemscope itemtype="http://schema.org/Person" style="display: none;">
                      <span itemprop="name">Hamish Burke</span>
                    </span>
                  </div>
                  
                  <div class="prose prose-invert max-w-none mb-4" style="color: var(--color-text-secondary);" itemprop="description">
                    {createPreview(post.content, 200)}
                  </div>
                  
                  {post.post_tags && post.post_tags.length > 0 && (
                    <div class="flex flex-wrap gap-2" role="list" aria-label="Post tags">
                      {post.post_tags.map((postTag, index) => {
                        // Cycle through different tag colors for visual variety
                        const colorVariant = index % 3;
                        let bgColor = 'var(--color-tag-bg)';
                        let textColor = 'var(--color-tag-text)';
                        
                        if (colorVariant === 1) {
                          bgColor = 'var(--color-tag-accent1-bg)';
                          textColor = 'var(--color-tag-accent1-text)';
                        } else if (colorVariant === 2) {
                          bgColor = 'var(--color-tag-accent2-bg)';
                          textColor = 'var(--color-tag-accent2-text)';
                        }
                        
                        return (
                          <a
                            role="listitem"
                            href={`/tags/${postTag.tags.slug}`}
                            class="text-sm px-2 py-1 rounded hover:opacity-80 transition-all"
                            style={`background-color: ${bgColor}; color: ${textColor};`}
                            itemprop="keywords"
                          >
                            {postTag.tags.name}
                          </a>
                        );
                      })}
                    </div>
                  )}
                </article>
              ))}
            </div>
          </section>
        </>
      ) : (
        <div class="text-center py-16 fade-in">
          <div class="mb-6">
            <svg class="animate-spin h-12 w-12 mx-auto" style="color: var(--color-primary-500);" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
          </div>
          <h2 class="text-2xl font-bold mb-4" style="color: var(--color-text-primary);">Loading content...</h2>
          <p class="text-lg" style="color: var(--color-text-muted);">
            Fetching the latest posts and reports for you.
          </p>
        </div>
      )
    ) : (
      <div class="text-center py-16 fade-in">
        <div class="mb-6">
          <svg class="h-16 w-16 mx-auto" style="color: var(--color-text-muted);" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4" />
          </svg>
        </div>
        <h2 class="text-2xl font-bold mb-4" style="color: var(--color-text-primary);">Database Connection Unavailable</h2>
        <p class="text-lg mb-6" style="color: var(--color-text-muted); max-width: 32rem; margin-left: auto; margin-right: auto;">
          The site is currently running in offline mode. Dynamic content from the database is temporarily unavailable. Please check back soon!
        </p>
        <a href="/" class="cta-button cta-secondary" style="border: 2px solid var(--color-primary-500); color: var(--color-primary-500);">
          Refresh Page
        </a>
      </div>
    )
  }
</Layout>

<style>
  /* Hero Section Styles */
  .cta-button {
    padding: 0.875rem 2rem;
    border-radius: 0.5rem;
    font-weight: 600;
    font-size: 1rem;
    transition: all 0.3s ease;
    display: inline-block;
    text-decoration: none;
  }

  .cta-primary {
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  }

  .cta-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    filter: brightness(1.1);
  }

  .cta-primary:active {
    transform: translateY(0);
  }

  .cta-secondary {
    background-color: transparent;
  }

  .cta-secondary:hover {
    background-color: var(--color-primary-500);
    color: white !important;
    transform: translateY(-2px);
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0.0, 0.05);
  }

  .cta-secondary:active {
    transform: translateY(0);
  }

  .cta-button:focus-visible {
    outline: 3px solid var(--color-primary-500);
    outline-offset: 3px;
  }

  /* Section Styles */
  .scroll-mt-24 {
    scroll-margin-top: 6rem;
  }

  .card-hover {
    transition: all 0.3s ease;
    position: relative;
  }

  .card-hover::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 3px;
    background-color: var(--color-primary-500);
    transform: scaleY(0);
    transition: transform 0.3s ease;
  }

  .card-hover:hover::before {
    transform: scaleY(1);
  }

  .card-hover:hover {
    padding-left: 1rem;
  }

  /* Disable text underline on card hover */
  .card-hover a {
    border-bottom: none !important;
  }

  .card-hover a::after {
    display: none;
  }

  .card-hover a:hover {
    color: var(--color-primary-500) !important;
    border-bottom: none !important;
  }

  .posts-section {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid var(--color-border-secondary);
  }
  
  .posts-section h2 {
    color: var(--color-primary-500);
    font-family: var(--font-heading);
  }

  /* Animations */
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateX(-20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  .fade-in {
    animation: fadeIn 0.6s ease-out forwards;
  }

  .slide-in {
    animation: slideIn 0.6s ease-out forwards;
  }

  .animate-spin {
    animation: spin 1s linear infinite;
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .cta-button {
      padding: 0.75rem 1.5rem;
      font-size: 0.9375rem;
    }

    .card-hover:hover::before {
      width: 2px;
    }

    .card-hover:hover {
      padding-left: 0.75rem;
    }

    section {
      scroll-margin-top: 4rem;
    }
  }

  @media (max-width: 640px) {
    .cta-button {
      width: 100%;
      justify-content: center;
    }

    .card-hover:hover::before {
      display: none;
    }

    .card-hover:hover {
      padding-left: 0;
    }
  }
</style>
